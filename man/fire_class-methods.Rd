% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fire_classification_fitted_predict.R
\name{fire_class-methods}
\alias{fire_class-methods}
\alias{fitted.fire_class}
\alias{print.fire_class_fitted}
\alias{predict.fire_class}
\alias{print.fire_class_prediction}
\title{Fitting and prediction methods for FIRE classification models}
\usage{
\method{fitted}{fire_class}(object, ...)

\method{print}{fire_class_fitted}(x, ...)

\method{predict}{fire_class}(object, newdata, Ynew = NULL, ...)

\method{print}{fire_class_prediction}(x, ...)
}
\arguments{
\item{object}{A fitted \code{fire_class} model object.}

\item{...}{Not used.}

\item{x}{An object returned by \code{fitted.fire_class} or
\code{predict.fire_class}.}

\item{newdata}{New input data (same structure as used in training).}

\item{Ynew}{Optional true class labels for \code{newdata}.}
}
\value{
\itemize{
  \item For \code{fitted.fire_class}: an object of class
  \code{"fire_class_fitted"} with elements \code{yhat}, \code{accuracy}, and
  \code{model}.
  \item For \code{predict.fire_class}: an object of class
  \code{"fire_class_prediction"} with elements \code{yhat}, \code{y.actual},
  \code{model}, and optional \code{accuracy}.
}
}
\description{
These functions provide fitted values, predictions, and print summaries
for \code{fire_class} objects.
}
\examples{
set.seed(42)
n_train <- 5; n_test  <- 2; n <- n_train + n_test
MatA <- matrix(c(1,1,1,0,0,0,0,0,0), nrow = 3, byrow = TRUE)
MatB <- matrix(c(0,0,0,0,0,0,1,1,1), nrow = 3, byrow = TRUE)
Y <- factor(c("A","A","B","B","A","A","B"), levels = c("A","B"))
# Generate matrices with small Gaussian noise
X <- lapply(seq_len(n), function(i) {base <- if (Y[i] == "A") MatA else MatB
noise <- matrix(rnorm(9, sd = 0.15), nrow = 3)
base + noise })
# Train/test split: first 5 train, last 2 test
X_train <- X[1:n_train]; X_test  <- X[(n_train + 1):n]
Y_train <- Y[1:n_train]; Y_test  <- Y[(n_train + 1):n]
dat_T <- list(1:3, 1:3)
mod <- fire_class(X = X_train, Y = Y_train, dat_T = dat_T,
 kernels = list(cfbm, cfbm), kernels_params = list(0.5, 0.5),
 class.labels = levels(Y_train), control = list(maxiter = 20, stop.eps = 1e-3))

fit <- fitted(mod)
print(fit)

pred <- predict(mod, newdata = X_test, Ynew = Y_test)
print(pred)

}
\seealso{
\code{\link{fire_class}}
}
