% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fire_cv.R
\name{fire_cv}
\alias{fire_cv}
\title{FIRE Model with k-Fold Cross-Validation}
\usage{
fire_cv(
  X,
  Y,
  dat_T,
  kernels,
  kernels_params,
  kernel_iprior = "cfbm",
  iprior_param = NULL,
  control = list(),
  nfolds = 10,
  seed = 1,
  ...
)
}
\arguments{
\item{X}{A numeric input in \code{matrix}, \code{data.frame}, \code{array} or \code{list}}

\item{Y}{A numeric response vector}

\item{dat_T}{List of index sets for each mode}

\item{kernels}{List of kernel functions for each mode (see \code{\link{kernels_fire}})}

\item{kernels_params}{List of parameters for each kernel}

\item{kernel_iprior}{Type of I-prior kernel}

\item{iprior_param}{Parameter for I-prior kernel:
\itemize{
  \item \code{"cfbm"} - Hurst coefficient (default 0.5)
  \item \code{"rbf"} - lengthscale (default 1)
  \item \code{"linear"} - offset (default 0)
  \item \code{"poly"} - degree and offset (default c(2, mean(Y)))
}}

\item{control}{A list of control parameters (see Details)}

\item{nfolds}{Number of folds for cross-validation (default: 10)}

\item{seed}{Random seed for reproducibility (default: 1)}

\item{...}{Additional arguments passed to methods}
}
\value{
A list containing:
  - cv_results: Data frame with results for each fold
  - mean_results: Vector of mean performance metrics across folds
  - fold_indices: List of indices used for each fold
  - final_model: Model trained on full data (if return_full_model = TRUE)
}
\description{
FIRE Model with k-Fold Cross-Validation
}
\details{
The \code{control} argument can include the following parameters:
\itemize{
  \item{\code{scale}: Logical indicating whether to center the response (default TRUE)}
  \item{\code{maxiter}: Maximum number of EM iterations (default 200)}
  \item{\code{stop.eps}: Convergence tolerance (default 1e-3)}
  \item{\code{constant_g}: Logical indicating whether to include constant kernel term in g (default TRUE)}
  \item{\code{constant_h}: Logical indicating whether to include constant kernel term in h (default FALSE)}
  \item{\code{center}: Logical indicating whether to center the kernel g (default FALSE)}
  \item{\code{std}: Logical indicating whether to standardise the kernel g (default TRUE)}
  \item{\code{par_init}: Optional list of initial parameter values (lambda, noise)}
  \item{\code{os_type}: Operating system type for compatibility ("Apple" or "Windows", default "Apple")}
  \item{\code{cores}: Number of cores for parallel computation (default: detectCores() - 1)}
  \item{\code{asymptote}: Logical to use asymptotic initial values (default TRUE)}
  \item{\code{sample_id}: Which mode contains samples (default 1)}
  \item{\code{epsilon}: Small positive constant in initialisation of EM algorithm (default 1)}
}
}
\examples{
data(Manure)
cv_result <- fire_cv(X = Manure$absorp[1:10,], Y = Manure$y$DM[1:10],
 kernels = list(cfbm), kernels_params = list(0.5),
 dat_T = list(1:700), control = list(stop.eps = 2, maxiter = 4), nfold = 2)

}
\seealso{
\code{\link{kernels_fire}}
}
